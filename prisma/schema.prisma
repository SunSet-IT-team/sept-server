generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
enum Role {
  ADMIN
  CUSTOMER
  EXECUTOR
}

// –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
enum OrderStatus {
  PENDING // –û–∂–∏–¥–∞–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
  IN_PROGRESS // –ü—Ä–∏–Ω—è—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º
  COMPLETED // –ó–∞–≤–µ—Ä—à—ë–Ω —Å –æ—Ç—á—ë—Ç–æ–º
}

// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  executorProfile ExecutorProfile?
  customerProfile CustomerProfile?

  ordersAsCustomer Order[]    @relation("CustomerOrders")
  ordersAsExecutor Order[]    @relation("ExecutorOrders")
  favorites        Favorite[] @relation("FavoriteCustomer")
  favoritedBy      Favorite[] @relation("FavoriteExecutor")

  declinedOrders OrderDeclined[]
  sentMessages    Message[] @relation("SentMessages")
  readMessages    MessageRead[]
}

// –ü—Ä–æ—Ñ–∏–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
model ExecutorProfile {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  city   String

  user User @relation(fields: [userId], references: [id])
}

// –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–∫–∞–∑—á–∏–∫–∞
model CustomerProfile {
  id      Int     @id @default(autoincrement())
  userId  Int     @unique
  address String?

  user User @relation(fields: [userId], references: [id])
}

// –£—Å–ª—É–≥–∏
model Service {
  id       Int    @id @default(autoincrement())
  name     String
  priority Int    @default(100)

  orders Order[]
}

// –ó–∞–∫–∞–∑—ã
model Order {
  id         Int  @id @default(autoincrement())
  customerId Int
  executorId Int? // null ‚Äî –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω
  serviceId  Int

  city        String
  description String
  report      String? // –¥–ª—è –æ—Ç—á—ë—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è

  status    OrderStatus @default(PENDING)
  priority  Int         @default(100)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  declinedBy OrderDeclined[]

  customer User    @relation("CustomerOrders", fields: [customerId], references: [id])
  executor User?   @relation("ExecutorOrders", fields: [executorId], references: [id])
  service  Service @relation(fields: [serviceId], references: [id])
  review   Review?
  chat Chat?

  @@index([status])
  @@index([priority])
}

// –û—Ç–∑—ã–≤—ã –∫ –∑–∞–∫–∞–∑–∞–º
model Review {
  id        Int      @id @default(autoincrement())
  orderId   Int      @unique // 1 –∑–∞–∫–∞–∑ = 1 –æ—Ç–∑—ã–≤
  rating    Int
  comment   String
  createdAt DateTime @default(now())

  order Order @relation(fields: [orderId], references: [id])
}

model Favorite {
  id         Int @id @default(autoincrement())
  customerId Int
  executorId Int

  customer User @relation("FavoriteCustomer", fields: [customerId], references: [id])
  executor User @relation("FavoriteExecutor", fields: [executorId], references: [id])

  @@unique([customerId, executorId]) // –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –¥–≤–∞–∂–¥—ã
}

model OrderDeclined {
  id         Int @id @default(autoincrement())
  orderId    Int
  executorId Int

  order    Order @relation(fields: [orderId], references: [id])
  executor User  @relation(fields: [executorId], references: [id])

  @@unique([orderId, executorId]) // –æ–¥–∏–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–¥–∏–Ω –∑–∞–∫–∞–∑ –æ–¥–∏–Ω —Ä–∞–∑
}


model Chat {
  id        Int      @id @default(autoincrement())
  orderId   Int      @unique
  order     Order    @relation(fields: [orderId], references: [id])
  messages  Message[]
  createdAt DateTime @default(now())
}


model Message {
  id        Int        @id @default(autoincrement())
  chatId    Int
  senderId  Int
  content   String?
  fileUrl   String?
  createdAt DateTime   @default(now())

  chat   Chat   @relation(fields: [chatId], references: [id])
  sender User   @relation("SentMessages", fields: [senderId], references: [id])
  reads  MessageRead[]
}

model MessageRead {
  id        Int @id @default(autoincrement())
  messageId Int
  userId    Int

  message Message @relation(fields: [messageId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
}